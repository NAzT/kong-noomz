❯
❯ cat docker-compose.yml
version: '3.3'

services:
  kong:
    image: kong
    ports:
      - 8000:8000
      - 8442:8443
      - 8001:8001
      - 8444:8444
    environment:
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DATABASE: postgres
      KONG_PG_HOST: pg
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: 1234
      KONG_NGINX_HTTP_LUA_SHARED_DICT: 'kong_cache_api_summary 100k'
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  kong-shell:
    image: kong
    command: sleep 10000000
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: pg
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: 1234
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:1234@pg:5432/konga"
    depends_on:
      - pg

  konga:
    image: pantsel/konga:latest
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:1234@pg:5432/konga
      NODE_ENV: production
    ports:
      - 1337:1337

  pg:
    image: postgres:9-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=1234
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      placement:
        constraints:
          - "node.role==manager"

volumes:
  pg_data:

~/kong master ?1 ❯                                                        root@ubuntu-s-1vcpu-1gb-intel-sgp1-01
